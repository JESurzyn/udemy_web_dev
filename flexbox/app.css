body {
    font-family: 'Open Sans', sans-serif;
}

h1 {
    text-align: center;
}

h2 {
    text-align: center;
}

#container {
    background-color: #003049;
    width: 90%;
    /* height: 500px; */
    margin: 0 auto;
    border: 5px solid #003049;
    /* turning on flexbox */
    display: flex;

    /* determining main axis */
    flex-direction: row;
    /* flex-direction: row-reverse;*/ /*reverses the direction of elements, etc. */
    /* flex-direction: column; */
    /* flex-direction: column-reverse; */

    /* justifies content along the main axis */
    /* justify-content: flex-start; */
    /* justify-content: flex-end; */
    justify-content: center;
    /* justify-content: space-between; */
    /* justify-content: space-around; */
    /* justify-content: space-evenly; */

    /* determines how content will"spill over" along cross access and changes direction of cross axis */
    /* flex-wrap: wrap; */
    /* flex-wrap:wrap-reverse; */

    /* aligns content along the cross axis */
    /* align-items: flex-end; */
    /* align-items: flex-start; */
    /* align-items: center; */
    /* aligns items on the cross-axis to the baseline of the text inside the elements */
    /* align-items: baseline; */

    /* determines the space between items when wrapped
    - note: if flex-wrap is not used this css clause will not do anything */
    /* align-content: center; */
    /* align-content: space-between; */
}

#container div {
    width: 100px;
    height: 100px;
    text-align: center;
    /* max-width: 300px; */
    /* font-size: 3em; */

    /* starting size of element along the main axis */
    flex-basis: 300px;
    /* flex-grow:1; */
}

/* align-self is used for individual elements (or specifically selecting elements) to align
on the cross axis - similar to align-items but for individual items */
/* div:nth-of-type(3){
    align-self:center;
}

div:nth-of-type(2){
    align-self:flex-end;
} */

/* will take up all available space within a container */
div:nth-of-type(1) {
    flex-grow: 1;
    /* like flex grow but opposite - proportionally how much to shrink by */
    flex-shrink: 3;
}

div:nth-of-type(5) {
    flex-grow:2;
    flex-shrink: 0;
}

main {
    width: 80%;
    margin: 0 auto;
    border: 5px solid black;
    height: 500px;
    display: flex;
}

main .sidebar {
    background-color: #6930c3;
    border: 2px solid white;
    flex:1 2 100px;
}

main .maincontent {
    background-color: #80ffdb;
    flex:2 600px;
}

